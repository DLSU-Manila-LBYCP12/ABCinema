/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cinema;

import static java.awt.image.ImageObserver.HEIGHT;
import java.util.Random;
import javax.swing.JOptionPane;
import project.seatList;




/**
 *
 * @author christinecarylchen
 */
public class WSLTBaywatch extends javax.swing.JFrame {

    seatList seatListDM = new seatList();
    
    
    /**
     * Creates new form AmphiDespicableMe3
     */
    public WSLTBaywatch() {
        
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Ticket = new javax.swing.JFrame();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        movieTitle = new javax.swing.JLabel();
        rating = new javax.swing.JLabel();
        cinema = new javax.swing.JLabel();
        confirmation = new javax.swing.JLabel();
        reservedNumTix = new javax.swing.JLabel();
        price = new javax.swing.JLabel();
        seats = new javax.swing.JLabel();
        dash = new javax.swing.JLabel();
        panelDespicalbleMe = new javax.swing.JPanel();
        detailpanelDespicalbleMe = new javax.swing.JPanel();
        posterDespicalbleMe = new javax.swing.JLabel();
        DespicalbleMe = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        selectSeats = new javax.swing.JLabel();
        ticketDetails1 = new javax.swing.JLabel();
        Seats = new javax.swing.JPanel();
        movieScreen = new javax.swing.JPanel();
        labelmovieScreen = new javax.swing.JLabel();
        panelseats = new javax.swing.JPanel();
        C2 = new javax.swing.JCheckBox();
        C4 = new javax.swing.JCheckBox();
        C6 = new javax.swing.JCheckBox();
        C7 = new javax.swing.JCheckBox();
        C3 = new javax.swing.JCheckBox();
        C5 = new javax.swing.JCheckBox();
        C1 = new javax.swing.JCheckBox();
        C9 = new javax.swing.JCheckBox();
        C8 = new javax.swing.JCheckBox();
        C10 = new javax.swing.JCheckBox();
        B1 = new javax.swing.JCheckBox();
        B2 = new javax.swing.JCheckBox();
        B3 = new javax.swing.JCheckBox();
        B4 = new javax.swing.JCheckBox();
        B5 = new javax.swing.JCheckBox();
        B6 = new javax.swing.JCheckBox();
        B7 = new javax.swing.JCheckBox();
        B8 = new javax.swing.JCheckBox();
        B9 = new javax.swing.JCheckBox();
        B10 = new javax.swing.JCheckBox();
        A1 = new javax.swing.JCheckBox();
        A2 = new javax.swing.JCheckBox();
        A3 = new javax.swing.JCheckBox();
        A4 = new javax.swing.JCheckBox();
        A5 = new javax.swing.JCheckBox();
        A6 = new javax.swing.JCheckBox();
        A7 = new javax.swing.JCheckBox();
        A8 = new javax.swing.JCheckBox();
        A9 = new javax.swing.JCheckBox();
        D1 = new javax.swing.JCheckBox();
        D2 = new javax.swing.JCheckBox();
        D3 = new javax.swing.JCheckBox();
        D4 = new javax.swing.JCheckBox();
        D5 = new javax.swing.JCheckBox();
        D6 = new javax.swing.JCheckBox();
        D7 = new javax.swing.JCheckBox();
        D8 = new javax.swing.JCheckBox();
        D9 = new javax.swing.JCheckBox();
        D10 = new javax.swing.JCheckBox();
        A10 = new javax.swing.JCheckBox();
        columnA = new javax.swing.JLabel();
        columnB = new javax.swing.JLabel();
        columnC = new javax.swing.JLabel();
        columnD = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        numberRow = new javax.swing.JLabel();
        Summary = new javax.swing.JPanel();
        ticketDetails = new javax.swing.JLabel();
        selectedSeats = new javax.swing.JLabel();
        numSeats = new javax.swing.JLabel();
        totalPrice = new javax.swing.JLabel();
        selectedSeats1 = new javax.swing.JLabel();
        numSeats1 = new javax.swing.JLabel();
        totalPrice1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        buttonContinue = new javax.swing.JButton();
        buttonBack = new javax.swing.JButton();

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesHome/ticketTitle.png"))); // NOI18N

        movieTitle.setFont(new java.awt.Font("Novecento sans wide", 1, 18)); // NOI18N
        movieTitle.setText("BAYWATCH");

        rating.setFont(new java.awt.Font("Novecento sans wide", 0, 10)); // NOI18N
        rating.setText("(R-13)");

        cinema.setFont(new java.awt.Font("Novecento sans wide", 0, 12)); // NOI18N
        cinema.setText("WSLT      7:30PM");

        confirmation.setFont(new java.awt.Font("Novecento sans wide", 0, 12)); // NOI18N

        reservedNumTix.setFont(new java.awt.Font("Novecento sans wide", 0, 12)); // NOI18N

        price.setFont(new java.awt.Font("Novecento sans wide", 0, 12)); // NOI18N

        seats.setFont(new java.awt.Font("Novecento sans wide", 1, 30)); // NOI18N

        dash.setFont(new java.awt.Font("Novecento sans wide", 0, 12)); // NOI18N
        dash.setText("--------------------------------------");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(movieTitle)
                            .addComponent(rating)
                            .addComponent(cinema))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(confirmation)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dash)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reservedNumTix)
                            .addComponent(price)
                            .addComponent(seats))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(movieTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rating)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cinema)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reservedNumTix)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(price)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dash, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seats)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout TicketLayout = new javax.swing.GroupLayout(Ticket.getContentPane());
        Ticket.getContentPane().setLayout(TicketLayout);
        TicketLayout.setHorizontalGroup(
            TicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        TicketLayout.setVerticalGroup(
            TicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        detailpanelDespicalbleMe.setBackground(new java.awt.Color(255, 255, 255));

        posterDespicalbleMe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/posters/posterBaywatch.png"))); // NOI18N

        DespicalbleMe.setFont(new java.awt.Font("Novecento sans wide", 1, 30)); // NOI18N
        DespicalbleMe.setForeground(new java.awt.Color(34, 66, 180));
        DespicalbleMe.setText("BAYWATCH");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonRating/labelR13.png"))); // NOI18N

        selectSeats.setFont(new java.awt.Font("AppleGothic", 0, 24)); // NOI18N
        selectSeats.setForeground(new java.awt.Color(153, 153, 153));
        selectSeats.setText("Select Seats");

        ticketDetails1.setFont(new java.awt.Font("Novecento sans wide", 1, 18)); // NOI18N
        ticketDetails1.setForeground(new java.awt.Color(34, 66, 180));
        ticketDetails1.setText("William Shaw Little Theatre");

        javax.swing.GroupLayout detailpanelDespicalbleMeLayout = new javax.swing.GroupLayout(detailpanelDespicalbleMe);
        detailpanelDespicalbleMe.setLayout(detailpanelDespicalbleMeLayout);
        detailpanelDespicalbleMeLayout.setHorizontalGroup(
            detailpanelDespicalbleMeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailpanelDespicalbleMeLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(posterDespicalbleMe)
                .addGap(26, 26, 26)
                .addGroup(detailpanelDespicalbleMeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailpanelDespicalbleMeLayout.createSequentialGroup()
                        .addGroup(detailpanelDespicalbleMeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DespicalbleMe)
                            .addComponent(jLabel2)
                            .addComponent(selectSeats))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(ticketDetails1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        detailpanelDespicalbleMeLayout.setVerticalGroup(
            detailpanelDespicalbleMeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailpanelDespicalbleMeLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(posterDespicalbleMe)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(detailpanelDespicalbleMeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ticketDetails1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DespicalbleMe)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(16, 16, 16)
                .addComponent(selectSeats)
                .addGap(75, 75, 75))
        );

        Seats.setBackground(new java.awt.Color(255, 255, 255));

        labelmovieScreen.setFont(new java.awt.Font("Novecento sans wide", 0, 10)); // NOI18N
        labelmovieScreen.setForeground(new java.awt.Color(102, 102, 102));
        labelmovieScreen.setText("MOVIE SCREEN HERE");

        javax.swing.GroupLayout movieScreenLayout = new javax.swing.GroupLayout(movieScreen);
        movieScreen.setLayout(movieScreenLayout);
        movieScreenLayout.setHorizontalGroup(
            movieScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(movieScreenLayout.createSequentialGroup()
                .addGap(424, 424, 424)
                .addComponent(labelmovieScreen)
                .addContainerGap(424, Short.MAX_VALUE))
        );
        movieScreenLayout.setVerticalGroup(
            movieScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelmovieScreen, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        C2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C2ActionPerformed(evt);
            }
        });

        C4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C4ActionPerformed(evt);
            }
        });

        C6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C6ActionPerformed(evt);
            }
        });

        C7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C7ActionPerformed(evt);
            }
        });

        C3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C3ActionPerformed(evt);
            }
        });

        C5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C5ActionPerformed(evt);
            }
        });

        C1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C1ActionPerformed(evt);
            }
        });

        C9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C9ActionPerformed(evt);
            }
        });

        C8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C8ActionPerformed(evt);
            }
        });

        C10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C10ActionPerformed(evt);
            }
        });

        B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B1ActionPerformed(evt);
            }
        });

        B2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B2ActionPerformed(evt);
            }
        });

        B3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B3ActionPerformed(evt);
            }
        });

        B4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B4ActionPerformed(evt);
            }
        });

        B5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B5ActionPerformed(evt);
            }
        });

        B6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B6ActionPerformed(evt);
            }
        });

        B7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B7ActionPerformed(evt);
            }
        });

        B8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B8ActionPerformed(evt);
            }
        });

        B9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B9ActionPerformed(evt);
            }
        });

        B10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B10ActionPerformed(evt);
            }
        });

        A1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A1ActionPerformed(evt);
            }
        });

        A2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A2ActionPerformed(evt);
            }
        });

        A3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A3ActionPerformed(evt);
            }
        });

        A4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A4ActionPerformed(evt);
            }
        });

        A5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A5ActionPerformed(evt);
            }
        });

        A6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A6ActionPerformed(evt);
            }
        });

        A7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A7ActionPerformed(evt);
            }
        });

        A8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A8ActionPerformed(evt);
            }
        });

        A9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A9ActionPerformed(evt);
            }
        });

        D1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D1ActionPerformed(evt);
            }
        });

        D2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D2ActionPerformed(evt);
            }
        });

        D3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D3ActionPerformed(evt);
            }
        });

        D4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D4ActionPerformed(evt);
            }
        });

        D5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D5ActionPerformed(evt);
            }
        });

        D6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D6ActionPerformed(evt);
            }
        });

        D7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D7ActionPerformed(evt);
            }
        });

        D8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D8ActionPerformed(evt);
            }
        });

        D9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D9ActionPerformed(evt);
            }
        });

        D10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D10ActionPerformed(evt);
            }
        });

        A10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelseatsLayout = new javax.swing.GroupLayout(panelseats);
        panelseats.setLayout(panelseatsLayout);
        panelseatsLayout.setHorizontalGroup(
            panelseatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelseatsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(panelseatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelseatsLayout.createSequentialGroup()
                        .addComponent(A1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(A2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(A3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(A4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(A5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(A6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(A7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(A8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(A9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(A10))
                    .addGroup(panelseatsLayout.createSequentialGroup()
                        .addComponent(C1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(C2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(C3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(C4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(C5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(C6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(C7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(C8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(C9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(C10))
                    .addGroup(panelseatsLayout.createSequentialGroup()
                        .addComponent(B1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B10))
                    .addGroup(panelseatsLayout.createSequentialGroup()
                        .addComponent(D1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(D2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(D3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(D4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(D5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(D6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(D7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(D8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(D9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(D10))))
        );
        panelseatsLayout.setVerticalGroup(
            panelseatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelseatsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelseatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(A1)
                    .addComponent(A9)
                    .addComponent(A8)
                    .addComponent(A7)
                    .addComponent(A2)
                    .addComponent(A3)
                    .addComponent(A4)
                    .addComponent(A5)
                    .addComponent(A6)
                    .addComponent(A10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelseatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(B1)
                    .addComponent(B10)
                    .addComponent(B9)
                    .addComponent(B8)
                    .addComponent(B7)
                    .addComponent(B2)
                    .addComponent(B3)
                    .addComponent(B4)
                    .addComponent(B5)
                    .addComponent(B6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelseatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(C1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(C10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(C9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(C8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(C7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(C2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(C3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(C4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(C5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(C6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelseatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(D1)
                    .addComponent(D10)
                    .addComponent(D9)
                    .addComponent(D8)
                    .addComponent(D7)
                    .addComponent(D2)
                    .addComponent(D3)
                    .addComponent(D4)
                    .addComponent(D5)
                    .addComponent(D6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        columnA.setFont(new java.awt.Font("Novecento sans wide", 0, 12)); // NOI18N
        columnA.setText("A");

        columnB.setFont(new java.awt.Font("Novecento sans wide", 0, 12)); // NOI18N
        columnB.setText("B");

        columnC.setFont(new java.awt.Font("Novecento sans wide", 0, 12)); // NOI18N
        columnC.setText("C");

        columnD.setFont(new java.awt.Font("Novecento sans wide", 0, 12)); // NOI18N
        columnD.setText("D");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        numberRow.setBackground(new java.awt.Color(255, 255, 255));
        numberRow.setFont(new java.awt.Font("Novecento sans wide", 0, 12)); // NOI18N
        numberRow.setText("    1       2      3      4      5      6      7      8      9      10");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(numberRow, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(numberRow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout SeatsLayout = new javax.swing.GroupLayout(Seats);
        Seats.setLayout(SeatsLayout);
        SeatsLayout.setHorizontalGroup(
            SeatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SeatsLayout.createSequentialGroup()
                .addGroup(SeatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SeatsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(movieScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(SeatsLayout.createSequentialGroup()
                        .addGap(347, 347, 347)
                        .addGroup(SeatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(columnB, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(columnA)
                            .addComponent(columnC)
                            .addComponent(columnD))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SeatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelseats, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 354, Short.MAX_VALUE)))
                .addContainerGap())
        );
        SeatsLayout.setVerticalGroup(
            SeatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SeatsLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(movieScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SeatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelseats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(SeatsLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(columnA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(columnB, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(columnC)
                        .addGap(12, 12, 12)
                        .addComponent(columnD)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        Summary.setBackground(new java.awt.Color(255, 255, 255));

        ticketDetails.setFont(new java.awt.Font("Novecento sans wide", 1, 12)); // NOI18N
        ticketDetails.setForeground(new java.awt.Color(34, 66, 180));
        ticketDetails.setText("TICKET DETAILS");

        selectedSeats.setFont(new java.awt.Font("AppleGothic", 0, 10)); // NOI18N
        selectedSeats.setForeground(new java.awt.Color(102, 102, 102));
        selectedSeats.setText("Selected Seats:");

        numSeats.setFont(new java.awt.Font("AppleGothic", 0, 10)); // NOI18N
        numSeats.setForeground(new java.awt.Color(102, 102, 102));
        numSeats.setText("Number of Seats:");

        totalPrice.setFont(new java.awt.Font("AppleGothic", 0, 10)); // NOI18N
        totalPrice.setForeground(new java.awt.Color(102, 102, 102));
        totalPrice.setText("Total Ticket Price:");

        selectedSeats1.setFont(new java.awt.Font("AppleGothic", 0, 10)); // NOI18N

        numSeats1.setFont(new java.awt.Font("AppleGothic", 0, 10)); // NOI18N

        totalPrice1.setFont(new java.awt.Font("AppleGothic", 0, 10)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(0, 0, 51));
        jPanel1.setForeground(new java.awt.Color(0, 0, 51));

        buttonContinue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesHome/buttonCont.png"))); // NOI18N
        buttonContinue.setBorder(null);
        buttonContinue.setBorderPainted(false);
        buttonContinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonContinueActionPerformed(evt);
            }
        });

        buttonBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesHome/buttonBack.png"))); // NOI18N
        buttonBack.setBorder(null);
        buttonBack.setBorderPainted(false);
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(buttonBack)
                .addGap(20, 20, 20)
                .addComponent(buttonContinue)
                .addGap(88, 88, 88))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonContinue)
                    .addComponent(buttonBack))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout SummaryLayout = new javax.swing.GroupLayout(Summary);
        Summary.setLayout(SummaryLayout);
        SummaryLayout.setHorizontalGroup(
            SummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SummaryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SummaryLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(SummaryLayout.createSequentialGroup()
                        .addComponent(ticketDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(171, 171, 171))
                    .addGroup(SummaryLayout.createSequentialGroup()
                        .addGroup(SummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SummaryLayout.createSequentialGroup()
                                .addComponent(totalPrice)
                                .addGap(18, 18, 18)
                                .addComponent(totalPrice1))
                            .addGroup(SummaryLayout.createSequentialGroup()
                                .addGroup(SummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numSeats)
                                    .addComponent(selectedSeats))
                                .addGap(17, 17, 17)
                                .addGroup(SummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selectedSeats1)
                                    .addComponent(numSeats1))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        SummaryLayout.setVerticalGroup(
            SummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SummaryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ticketDetails)
                .addGap(18, 18, 18)
                .addGroup(SummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectedSeats)
                    .addComponent(selectedSeats1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numSeats)
                    .addComponent(numSeats1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalPrice)
                    .addComponent(totalPrice1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelDespicalbleMeLayout = new javax.swing.GroupLayout(panelDespicalbleMe);
        panelDespicalbleMe.setLayout(panelDespicalbleMeLayout);
        panelDespicalbleMeLayout.setHorizontalGroup(
            panelDespicalbleMeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDespicalbleMeLayout.createSequentialGroup()
                .addGroup(panelDespicalbleMeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDespicalbleMeLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(panelDespicalbleMeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Seats, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(detailpanelDespicalbleMe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panelDespicalbleMeLayout.createSequentialGroup()
                        .addGap(329, 329, 329)
                        .addComponent(Summary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        panelDespicalbleMeLayout.setVerticalGroup(
            panelDespicalbleMeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDespicalbleMeLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(detailpanelDespicalbleMe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Seats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Summary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelDespicalbleMe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panelDespicalbleMe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void C2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C2ActionPerformed
       if(C2.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("C2, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
            
            
        }
        else if (C2.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("C2, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_C2ActionPerformed

    private void C4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C4ActionPerformed
        if(C4.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("C4, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (C4.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("C4, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  

    }//GEN-LAST:event_C4ActionPerformed

    private void C7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C7ActionPerformed
        if(C7.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("C7, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (C7.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("C7, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_C7ActionPerformed

    private void C6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C6ActionPerformed
        if(C6.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("C6, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (C6.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("C6, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_C6ActionPerformed

    private void C3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C3ActionPerformed
        if(C3.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("C3, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
            
        }
        else if (C3.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("C3, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_C3ActionPerformed

    private void C5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C5ActionPerformed
        if(C5.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("C5, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (C5.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("C5, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_C5ActionPerformed

    private void C1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C1ActionPerformed
        if(C1.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("C1, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (C1.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("C1, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_C1ActionPerformed

    private void C9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C9ActionPerformed
        if(C9.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("C9, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (C9.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("C9, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_C9ActionPerformed

    private void C8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C8ActionPerformed
        if(C8.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("C8, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (C8.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("C8, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_C8ActionPerformed

    private void C10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C10ActionPerformed
        if(C10.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("C10, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (C10.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("C10, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_C10ActionPerformed

    private void B2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B2ActionPerformed
        if(B2.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("B2, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (B2.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("B2, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_B2ActionPerformed

    private void B3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B3ActionPerformed
        if(B3.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("B3, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (B3.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("B3, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_B3ActionPerformed

    private void B4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B4ActionPerformed
       if(B4.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("B4, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (B4.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("B4, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_B4ActionPerformed

    private void B5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B5ActionPerformed
        if(B5.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("B5, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (B5.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("B5, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_B5ActionPerformed

    private void B6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B6ActionPerformed
        if(B6.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("B6, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (B6.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("B6, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_B6ActionPerformed

    private void B7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B7ActionPerformed
        if(B7.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("B7, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (B7.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("B7, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_B7ActionPerformed

    private void B8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B8ActionPerformed
        if(B8.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("B8, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (B8.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("B8, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_B8ActionPerformed

    private void B9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B9ActionPerformed
        if(B9.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("B9, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (B9.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("B9, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_B9ActionPerformed

    private void A3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A3ActionPerformed
        if(A3.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("A3, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (A3.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("A3, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_A3ActionPerformed

    private void A4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A4ActionPerformed
        if(A4.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("A4, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (A4.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("A4, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }  
    }//GEN-LAST:event_A4ActionPerformed

    private void A5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A5ActionPerformed
        if(A5.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("A5, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (A5.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("A5, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_A5ActionPerformed

    private void A6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A6ActionPerformed
        if(A6.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("A6, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (A6.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("A6, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_A6ActionPerformed

    private void A7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A7ActionPerformed
        if(A7.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("A7, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (A7.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("A7, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_A7ActionPerformed

    private void A8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A8ActionPerformed
        if(A8.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("A8, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (A8.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("A8, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_A8ActionPerformed

    private void D1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D1ActionPerformed
        if(D1.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("D1, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (D1.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("D1, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_D1ActionPerformed

    private void D2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D2ActionPerformed
        if(D2.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("D2, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (D2.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("D2, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_D2ActionPerformed

    private void D3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D3ActionPerformed
        if(D3.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("D3, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (D3.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("D3, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_D3ActionPerformed

    private void D4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D4ActionPerformed
        if(D4.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("D4, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (D4.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("D4, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_D4ActionPerformed

    private void D5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D5ActionPerformed
        if(D5.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("D5, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (D5.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("D5, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_D5ActionPerformed

    private void D6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D6ActionPerformed
        if(D6.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("D6, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (D6.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("D6, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_D6ActionPerformed

    private void D7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D7ActionPerformed
        if(D7.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("D7, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (D7.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("D7, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_D7ActionPerformed

    private void D8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D8ActionPerformed
        if(D8.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("D8, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (D8.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("D8, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_D8ActionPerformed

    private void D9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D9ActionPerformed
        if(D9.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("D9, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (D9.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("D9, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_D9ActionPerformed

    private void D10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D10ActionPerformed
        if(D10.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("D10, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (D10.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("D10, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_D10ActionPerformed

    private void B10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B10ActionPerformed
        if(B10.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("B10, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (B10.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("B10, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_B10ActionPerformed

    private void B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B1ActionPerformed
        if(B1.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("B1, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (B1.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("B1, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_B1ActionPerformed

    private void A10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A10ActionPerformed
        if(A10.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("A10, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (A10.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("A10, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_A10ActionPerformed

    private void A9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A9ActionPerformed
        if(A9.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("A9, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (A9.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("A9, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_A9ActionPerformed

    private void A2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A2ActionPerformed
        if(A2.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("A2, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (A2.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("A2, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_A2ActionPerformed

    private void A1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A1ActionPerformed
        if(A1.isSelected()==true){
            selectedSeats1.setText(selectedSeats1.getText().concat("A1, "));
            countSeats = countSeats + 1;
            total = total + 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
        else if (A1.isSelected() == false){
            selectedSeats1.setText(selectedSeats1.getText().replace("A1, ", ""));
            countSeats = countSeats - 1;
            total = total - 250;
            numSeats1.setText(String.valueOf(countSeats));
            totalPrice1.setText(String.valueOf(total));
        }
    }//GEN-LAST:event_A1ActionPerformed

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        WSLT wslt = new WSLT();
        wslt.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_buttonBackActionPerformed

    public static char randomNumbers() {
        Random r = new Random();
        char random = (char) (48 + r.nextInt(47));
        return random;
    }
    
    private void buttonContinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonContinueActionPerformed
        if (countSeats == 0)
            JOptionPane.showMessageDialog(rootPane, "No seat chosen. Please choose a seat.", "Error!", HEIGHT);
        
        else{
            Ticket.setVisible(true);
            Ticket.setSize(272, 320);
            Ticket.setLocation(430, 300);
            Ticket.setTitle("Ticket");
            
            int ran = (randomNumbers() + randomNumbers() + randomNumbers() + randomNumbers()+ randomNumbers()+randomNumbers() + randomNumbers() + randomNumbers() + randomNumbers() + randomNumbers());
            
            confirmation.setText("Confirmation Number: " + ran);
            
            reservedNumTix.setText("Reserved " + numSeats1.getText() + " ticket(s) @ PHP250 each");
            price.setText("Total Price: " + totalPrice1.getText());
            seats.setText(selectedSeats1.getText());
        }
        
        selectedSeats1.setText("");
        countSeats = 0;
        total = 0;
        numSeats1.setText("");
        totalPrice1.setText("");
        
        //ROW A
        if(A1.isSelected()==true){
                A1.setEnabled(false);
                seatListDM.reserveSeats(1);
        }
        if(A2.isSelected()==true){
                A2.setEnabled(false);
                seatListDM.reserveSeats(2);
        }
        if(A3.isSelected()==true){
                A3.setEnabled(false);
                seatListDM.reserveSeats(3);
        }
        if(A4.isSelected()==true){
                A4.setEnabled(false);
                seatListDM.reserveSeats(4);
        }
        if(A5.isSelected()==true){
                A5.setEnabled(false);
                seatListDM.reserveSeats(5);
        }
        if(A6.isSelected()==true){
                A6.setEnabled(false);
                seatListDM.reserveSeats(6);
        }
        if(A7.isSelected()==true){
                A7.setEnabled(false);
                seatListDM.reserveSeats(7);
        }
        if(A8.isSelected()==true){
                A8.setEnabled(false);
                seatListDM.reserveSeats(8);
        }
        if(A9.isSelected()==true){
                A9.setEnabled(false);
                seatListDM.reserveSeats(9);
        }
        if(A10.isSelected()==true){
                A10.setEnabled(false);
                seatListDM.reserveSeats(10);
        }
            
        //ROW B
        if(B1.isSelected()==true){
                B1.setEnabled(false);
                seatListDM.reserveSeats(11);
        }
        if(B2.isSelected()==true){
                B2.setEnabled(false);
                seatListDM.reserveSeats(12);
        }
        if(B3.isSelected()==true){
                B3.setEnabled(false);
                seatListDM.reserveSeats(13);
        }
        if(B4.isSelected()==true){
                B4.setEnabled(false);
                seatListDM.reserveSeats(14);
        }
        if(B5.isSelected()==true){
                B5.setEnabled(false);
                seatListDM.reserveSeats(15);
        }
        if(B6.isSelected()==true){
                B6.setEnabled(false);
                seatListDM.reserveSeats(16);
        }
        if(B7.isSelected()==true){
                B7.setEnabled(false);
                seatListDM.reserveSeats(17);
        }
        if(B8.isSelected()==true){
                B8.setEnabled(false);
                seatListDM.reserveSeats(18);
        }
        if(B9.isSelected()==true){
                B9.setEnabled(false);
                seatListDM.reserveSeats(19);
        }
        if(B10.isSelected()==true){
                B10.setEnabled(false);
                seatListDM.reserveSeats(20);
        }
        
        //ROW C
        if(C1.isSelected()==true){
                C1.setEnabled(false);
                seatListDM.reserveSeats(21);
        }
        if(C2.isSelected()==true){
                C2.setEnabled(false);
                seatListDM.reserveSeats(22);
        }
        if(C3.isSelected()==true){
                C3.setEnabled(false);
                seatListDM.reserveSeats(23);
        }
        if(C4.isSelected()==true){
                C4.setEnabled(false);
                seatListDM.reserveSeats(24);
        }
        if(C5.isSelected()==true){
                C5.setEnabled(false);
                seatListDM.reserveSeats(25);
        }
        if(C6.isSelected()==true){
                C6.setEnabled(false);
                seatListDM.reserveSeats(26);
        }
        if(C7.isSelected()==true){
                C7.setEnabled(false);
                seatListDM.reserveSeats(27);
        }
        if(C8.isSelected()==true){
                C8.setEnabled(false);
                seatListDM.reserveSeats(28);
        }
        if(C9.isSelected()==true){
                C9.setEnabled(false);
                seatListDM.reserveSeats(29);
        }
        if(C10.isSelected()==true){
                C10.setEnabled(false);
                seatListDM.reserveSeats(30);
        }
        
        //ROW D
        if(D1.isSelected()==true){
                D1.setEnabled(false);
                seatListDM.reserveSeats(31);
        }
        if(D2.isSelected()==true){
                D2.setEnabled(false);
                seatListDM.reserveSeats(32);
        }
        if(D3.isSelected()==true){
                D3.setEnabled(false);
                seatListDM.reserveSeats(33);
        }
        if(D4.isSelected()==true){
                D4.setEnabled(false);
                seatListDM.reserveSeats(34);
        }
        if(D5.isSelected()==true){
                D5.setEnabled(false);
                seatListDM.reserveSeats(35);
        }
        if(D6.isSelected()==true){
                D6.setEnabled(false);
                seatListDM.reserveSeats(36);
        }
        if(D7.isSelected()==true){
                D7.setEnabled(false);
                seatListDM.reserveSeats(37);
        }
        if(D8.isSelected()==true){
                D8.setEnabled(false);
                seatListDM.reserveSeats(38);
        }
        if(D9.isSelected()==true){
                D9.setEnabled(false);
                seatListDM.reserveSeats(39);
        }
        if(D10.isSelected()==true){
                D10.setEnabled(false);
                seatListDM.reserveSeats(40);
        }
        
    }//GEN-LAST:event_buttonContinueActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WSLTBaywatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WSLTBaywatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WSLTBaywatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WSLTBaywatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WSLTBaywatch().setVisible(true);
            }
        });
    }

    private int countSeats = 0;
    private int total = 0;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox A1;
    private javax.swing.JCheckBox A10;
    private javax.swing.JCheckBox A2;
    private javax.swing.JCheckBox A3;
    private javax.swing.JCheckBox A4;
    private javax.swing.JCheckBox A5;
    private javax.swing.JCheckBox A6;
    private javax.swing.JCheckBox A7;
    private javax.swing.JCheckBox A8;
    private javax.swing.JCheckBox A9;
    private javax.swing.JCheckBox B1;
    private javax.swing.JCheckBox B10;
    private javax.swing.JCheckBox B2;
    private javax.swing.JCheckBox B3;
    private javax.swing.JCheckBox B4;
    private javax.swing.JCheckBox B5;
    private javax.swing.JCheckBox B6;
    private javax.swing.JCheckBox B7;
    private javax.swing.JCheckBox B8;
    private javax.swing.JCheckBox B9;
    private javax.swing.JCheckBox C1;
    private javax.swing.JCheckBox C10;
    private javax.swing.JCheckBox C2;
    private javax.swing.JCheckBox C3;
    private javax.swing.JCheckBox C4;
    private javax.swing.JCheckBox C5;
    private javax.swing.JCheckBox C6;
    private javax.swing.JCheckBox C7;
    private javax.swing.JCheckBox C8;
    private javax.swing.JCheckBox C9;
    private javax.swing.JCheckBox D1;
    private javax.swing.JCheckBox D10;
    private javax.swing.JCheckBox D2;
    private javax.swing.JCheckBox D3;
    private javax.swing.JCheckBox D4;
    private javax.swing.JCheckBox D5;
    private javax.swing.JCheckBox D6;
    private javax.swing.JCheckBox D7;
    private javax.swing.JCheckBox D8;
    private javax.swing.JCheckBox D9;
    private javax.swing.JLabel DespicalbleMe;
    private javax.swing.JPanel Seats;
    private javax.swing.JPanel Summary;
    private javax.swing.JFrame Ticket;
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonContinue;
    private javax.swing.JLabel cinema;
    private javax.swing.JLabel columnA;
    private javax.swing.JLabel columnB;
    private javax.swing.JLabel columnC;
    private javax.swing.JLabel columnD;
    private javax.swing.JLabel confirmation;
    private javax.swing.JLabel dash;
    private javax.swing.JPanel detailpanelDespicalbleMe;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel labelmovieScreen;
    private javax.swing.JPanel movieScreen;
    private javax.swing.JLabel movieTitle;
    private javax.swing.JLabel numSeats;
    private javax.swing.JLabel numSeats1;
    private javax.swing.JLabel numberRow;
    private javax.swing.JPanel panelDespicalbleMe;
    private javax.swing.JPanel panelseats;
    private javax.swing.JLabel posterDespicalbleMe;
    private javax.swing.JLabel price;
    private javax.swing.JLabel rating;
    private javax.swing.JLabel reservedNumTix;
    private javax.swing.JLabel seats;
    private javax.swing.JLabel selectSeats;
    private javax.swing.JLabel selectedSeats;
    private javax.swing.JLabel selectedSeats1;
    private javax.swing.JLabel ticketDetails;
    private javax.swing.JLabel ticketDetails1;
    private javax.swing.JLabel totalPrice;
    private javax.swing.JLabel totalPrice1;
    // End of variables declaration//GEN-END:variables
}
